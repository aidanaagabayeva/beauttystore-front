{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aagab\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\react1\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isCompleteScreen, setIsCompleteScreen] = useState(false);\n  const [allTodos, setTodos] = useState([]);\n  const [newTitle, setNewTitle] = useState('');\n  const [newDescription, setNewDescription] = useState('');\n  const [completedTodos, setCompletedTodos] = useState([]);\n  const [currentEdit, setCurrentEdit] = useState(\"\");\n  const [currentEditedItem, setCurrentEditedItem] = useState(\"\");\n  const handleAddTodo = () => {\n    let newTodoItem = {\n      title: newTitle,\n      description: newDescription\n    };\n    let updatedTodoArr = [...allTodos];\n    updatedTodoArr.push(newTodoItem);\n    setTodos(updatedTodoArr);\n    localStorage.setItem('todolist', JSON.stringify(updatedTodoArr));\n  };\n  const handleDeleteTodo = index => {\n    let reducedTodo = [...allTodos];\n    reducedTodo.splice(index);\n    localStorage.setItem('todolist', JSON.stringify(reducedTodo));\n    setTodos(reducedTodo);\n  };\n  const handleComplete = index => {\n    let now = new Date();\n    let dd = now.getDate();\n    let mm = now.getMonth() + 1;\n    let yyyy = now.getFullYear();\n    let h = now.getHours();\n    let m = now.getMinutes();\n    let s = now.getSeconds();\n    let completedOn = dd + '-' + mm + '-' + yyyy + ' at ' + h + ':' + m + ':' + s;\n    let filteredItem = {\n      ...allTodos[index],\n      completedOn: completedOn\n    };\n    let updatedCompletedArr = [...completedTodos];\n    updatedCompletedArr.push(filteredItem);\n    setCompletedTodos(updatedCompletedArr);\n    handleDeleteTodo(index);\n    localStorage.setItem('completedTodos', JSON.stringify(updatedCompletedArr));\n  };\n  const handleDeleteCompletedTodo = index => {\n    let reducedTodo = [...completedTodos];\n    reducedTodo.splice(index);\n    localStorage.setItem('completedTodos', JSON.stringify(reducedTodo));\n    setCompletedTodos(reducedTodo);\n  };\n  useEffect(() => {\n    let savedTodo = JSON.parse(localStorage.getItem('todolist'));\n    let savedCompletedTodo = JSON.parse(localStorage.getItem('completedTodos'));\n    if (savedTodo) {\n      setTodos(savedTodo);\n    }\n    if (savedCompletedTodo) {\n      setCompletedTodos(savedCompletedTodo);\n    }\n  }, []);\n  const handleEdit = (ind, item) => {\n    console.log(ind);\n    setCurrentEdit(ind);\n    setCurrentEditedItem(item);\n  };\n  const handleUpdateTitle = value => {\n    setCurrentEditedItem(prev => {\n      return {\n        ...prev,\n        title: value\n      };\n    });\n  };\n  const handleUpdateDescription = value => {\n    setCurrentEditedItem(prev => {\n      return {\n        ...prev,\n        description: value\n      };\n    });\n  };\n  const handleUpdateToDo = () => {\n    let newToDo = [...allTodos];\n    newToDo[currentEdit] = currentEditedItem;\n    setTodos(newToDo);\n    setCurrentEdit(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-input-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newTitle,\n            onChange: e => setNewTitle(e.target.value),\n            placeholder: \"What's the task title?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-input-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newDescription,\n            onChange: e => setNewDescription(e.target.value),\n            placeholder: \"What's the task description?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-input-item\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleAddTodo,\n            className: \"primaryBtn\",\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `secondaryBtn ${isCompleteScreen === false && 'active'}`,\n          onClick: () => setIsCompleteScreen(false),\n          children: \"Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `secondaryBtn ${isCompleteScreen === true && 'active'}`,\n          onClick: () => setIsCompleteScreen(true),\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-list\",\n        children: [isCompleteScreen === false && allTodos.map((item, index) => {\n          if (currentEdit === index) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"edit__wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                placeholder: \"Updated Title\",\n                onChange: e => handleUpdateTitle(e.target.value),\n                value: currentEditedItem.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                placeholder: \"Updated Title\",\n                rows: 4,\n                onChange: e => handleUpdateDescription(e.target.value),\n                value: currentEditedItem.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: handleUpdateToDo,\n                className: \"primaryBtn\",\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 20\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 19\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"todo-list-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: item.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: item.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(AiOutlineDelete, {\n                  className: \"icon\",\n                  onClick: () => handleDeleteTodo(index),\n                  title: \"Delete?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(BsCheckLg, {\n                  className: \"check-icon\",\n                  onClick: () => handleComplete(index),\n                  title: \"Complete?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(AiOutlineEdit, {\n                  className: \"check-icon\",\n                  onClick: () => handleEdit(index, item),\n                  title: \"Edit?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 19\n            }, this);\n          }\n        }), isCompleteScreen === true && completedTodos.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todo-list-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: [\"Completed on: \", item.completedOn]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 24\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(AiOutlineDelete, {\n                className: \"icon\",\n                onClick: () => handleDeleteCompletedTodo(index),\n                title: \"Delete?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"FNwolZazcUspKyDlmyrIOZzaVDY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","isCompleteScreen","setIsCompleteScreen","allTodos","setTodos","newTitle","setNewTitle","newDescription","setNewDescription","completedTodos","setCompletedTodos","currentEdit","setCurrentEdit","currentEditedItem","setCurrentEditedItem","handleAddTodo","newTodoItem","title","description","updatedTodoArr","push","localStorage","setItem","JSON","stringify","handleDeleteTodo","index","reducedTodo","splice","handleComplete","now","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","h","getHours","m","getMinutes","s","getSeconds","completedOn","filteredItem","updatedCompletedArr","handleDeleteCompletedTodo","savedTodo","parse","getItem","savedCompletedTodo","handleEdit","ind","item","console","log","handleUpdateTitle","value","prev","handleUpdateDescription","handleUpdateToDo","newToDo","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","placeholder","onClick","map","rows","AiOutlineDelete","BsCheckLg","AiOutlineEdit","_c","$RefreshReg$"],"sources":["C:/Users/aagab/OneDrive/Рабочий стол/react1/src/App.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './App.css';\n\n\nfunction App () {\n  const [isCompleteScreen, setIsCompleteScreen] = useState (false);\n  const [allTodos, setTodos] = useState ([]);\n  const [newTitle, setNewTitle] = useState ('');\n  const [newDescription, setNewDescription] = useState ('');\n  const [completedTodos, setCompletedTodos] = useState ([]);\n  const [currentEdit,setCurrentEdit] = useState(\"\");\n  const [currentEditedItem,setCurrentEditedItem] = useState(\"\");\n\n  const handleAddTodo = () => {\n    let newTodoItem = {\n      title: newTitle,\n      description: newDescription,\n    };\n\n    let updatedTodoArr = [...allTodos];\n    updatedTodoArr.push (newTodoItem);\n    setTodos (updatedTodoArr);\n    localStorage.setItem ('todolist', JSON.stringify (updatedTodoArr));\n  };\n\n  const handleDeleteTodo = index => {\n    let reducedTodo = [...allTodos];\n    reducedTodo.splice (index);\n\n    localStorage.setItem ('todolist', JSON.stringify (reducedTodo));\n    setTodos (reducedTodo);\n  };\n\n  const handleComplete = index => {\n    let now = new Date ();\n    let dd = now.getDate ();\n    let mm = now.getMonth () + 1;\n    let yyyy = now.getFullYear ();\n    let h = now.getHours ();\n    let m = now.getMinutes ();\n    let s = now.getSeconds ();\n    let completedOn =\n      dd + '-' + mm + '-' + yyyy + ' at ' + h + ':' + m + ':' + s;\n\n    let filteredItem = {\n      ...allTodos[index],\n      completedOn: completedOn,\n    };\n\n    let updatedCompletedArr = [...completedTodos];\n    updatedCompletedArr.push (filteredItem);\n    setCompletedTodos (updatedCompletedArr);\n    handleDeleteTodo (index);\n    localStorage.setItem (\n      'completedTodos',\n      JSON.stringify (updatedCompletedArr)\n    );\n  };\n\n  const handleDeleteCompletedTodo = index => {\n    let reducedTodo = [...completedTodos];\n    reducedTodo.splice (index);\n\n    localStorage.setItem ('completedTodos', JSON.stringify (reducedTodo));\n    setCompletedTodos (reducedTodo);\n  };\n\n  useEffect (() => {\n    let savedTodo = JSON.parse (localStorage.getItem ('todolist'));\n    let savedCompletedTodo = JSON.parse (\n      localStorage.getItem ('completedTodos')\n    );\n    if (savedTodo) {\n      setTodos (savedTodo);\n    }\n\n    if (savedCompletedTodo) {\n      setCompletedTodos (savedCompletedTodo);\n    }\n  }, []);\n\n\n  const handleEdit = (ind,item)=>{\n    console.log(ind);\n    setCurrentEdit(ind);\n    setCurrentEditedItem(item);\n  }\n\n  const handleUpdateTitle = (value)=>{\n    setCurrentEditedItem((prev)=>{\n      return {...prev,title:value}\n    })\n  }\n\n  const handleUpdateDescription = (value)=>{\n    setCurrentEditedItem((prev)=>{\n      return {...prev,description:value}\n    })\n  }\n\n  const handleUpdateToDo = ()=>{\n      let newToDo = [...allTodos];\n      newToDo[currentEdit] = currentEditedItem;\n      setTodos(newToDo);\n      setCurrentEdit(\"\");\n  }\n\n\n\n  return (\n    <div className=\"App\">\n      <h1>My Todos</h1>\n\n      <div className=\"todo-wrapper\">\n        <div className=\"todo-input\">\n          <div className=\"todo-input-item\">\n            <label>Title</label>\n            <input\n              type=\"text\"\n              value={newTitle}\n              onChange={e => setNewTitle (e.target.value)}\n              placeholder=\"What's the task title?\"\n            />\n          </div>\n          <div className=\"todo-input-item\">\n            <label>Description</label>\n            <input\n              type=\"text\"\n              value={newDescription}\n              onChange={e => setNewDescription (e.target.value)}\n              placeholder=\"What's the task description?\"\n            />\n          </div>\n          <div className=\"todo-input-item\">\n            <button\n              type=\"button\"\n              onClick={handleAddTodo}\n              className=\"primaryBtn\"\n            >\n              Add\n            </button>\n          </div>\n        </div>\n\n        <div className=\"btn-area\">\n          <button\n            className={`secondaryBtn ${isCompleteScreen === false && 'active'}`}\n            onClick={() => setIsCompleteScreen (false)}\n          >\n            Todo\n          </button>\n          <button\n            className={`secondaryBtn ${isCompleteScreen === true && 'active'}`}\n            onClick={() => setIsCompleteScreen (true)}\n          >\n            Completed\n          </button>\n        </div>\n\n        <div className=\"todo-list\">\n\n          {isCompleteScreen === false &&\n            allTodos.map ((item, index) => {\n              if(currentEdit===index){\n                 return(\n                  <div className='edit__wrapper' key={index}>\n                  <input placeholder='Updated Title' \n                  onChange={(e)=>handleUpdateTitle(e.target.value)} \n                  value={currentEditedItem.title}  />\n                  <textarea placeholder='Updated Title' \n                  rows={4}\n                  onChange={(e)=>handleUpdateDescription(e.target.value)} \n                  value={currentEditedItem.description}  />\n                   <button\n              type=\"button\"\n              onClick={handleUpdateToDo}\n              className=\"primaryBtn\"\n            >\n              Update\n            </button>\n              </div> \n                 ) \n              }else{\n                return (\n                  <div className=\"todo-list-item\" key={index}>\n                    <div>\n                      <h3>{item.title}</h3>\n                      <p>{item.description}</p>\n                    </div>\n  \n                    <div>\n                      <AiOutlineDelete\n                        className=\"icon\"\n                        onClick={() => handleDeleteTodo (index)}\n                        title=\"Delete?\"\n                      />\n                      <BsCheckLg\n                        className=\"check-icon\"\n                        onClick={() => handleComplete (index)}\n                        title=\"Complete?\"\n                      />\n                      <AiOutlineEdit  className=\"check-icon\"\n                        onClick={() => handleEdit (index,item)}\n                        title=\"Edit?\" />\n                    </div>\n  \n                  </div>\n                );\n              }\n              \n            })}\n\n          {isCompleteScreen === true &&\n            completedTodos.map ((item, index) => {\n              return (\n                <div className=\"todo-list-item\" key={index}>\n                  <div>\n                    <h3>{item.title}</h3>\n                    <p>{item.description}</p>\n                    <p><small>Completed on: {item.completedOn}</small></p>\n                  </div>\n\n                  <div>\n                    <AiOutlineDelete\n                      className=\"icon\"\n                      onClick={() => handleDeleteCompletedTodo (index)}\n                      title=\"Delete?\"\n                    />\n                  </div>\n\n                </div>\n              );\n            })}\n\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}